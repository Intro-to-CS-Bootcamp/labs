[{"chapter":"CHAPTER 6: MORE ABOUT METHODS","questions":[{"exact":true,"answer":"\"CAPITALIZE\"","question":[">> 'Capitalize'.upcase"]},{"exact":false,"answer":"2","question":[">> 55 / 5 % 3"]},{"exact":false,"answer":"10","question":[">> 10 % 12"]},{"exact":false,"answer":"2024","question":[">> 'It is '.length + 2018"]},{"exact":false,"answer":"0","question":[">> rand(6)/ 6"]},{"exact":true,"answer":"welcome to cal, smarter-than-stanfords; nil","question":[">> str = 'sdrofnats-naht-retrams'",">> rts = ', ' + str.reverse",">> rts = 'welcome to cal' + rts",">> puts rts"]}]},{"chapter":"CHAPTER 7: FLOW CONTROL","questions":[{"exact":false,"answer":"true","question":[">> 'big' < 'small'"]},{"exact":false,"answer":"error","question":[">> 50 / 5 > '10' "]},{"exact":false,"answer":"false","question":[">> '5' < '20' "]},{"exact":false,"answer":"false","question":[">> 5 % 2 == 2 || 2**3 == 6"]},{"exact":false,"answer":"true","question":[">> 5 / 2 == 4 / 2 && 2 > 1"]},{"exact":false,"answer":"true","question":[">> 'a' < 'A' || 5 < 20 && 4.6.to_i == 4"]},{"exact":false,"answer":"\"1\"","question":[">> 2 > 1 && '1'"]},{"exact":true,"answer":"ha; nil","question":[">> 1 && (puts 'ha')"]},{"exact":false,"answer":"error","question":[">> 1**3 < 2 && 1 / 0 == 0 && 4 < 5"]},{"exact":true,"answer":"hello; nil","question":[">> if (puts 'hello')",">>    puts 'world'",">> end"]},{"exact":true,"answer":"I love cs!; nil","question":[">> if rand(1) < 1",">>     puts 'I love cs!'",">> else",">>     puts 'I hate cs!'",">> end"]},{"exact":false,"answer":"2; 1; 0; nil","question":[">> n = 2",">> while n > -1 ",">>     puts n",">>     n = n - 1",">> end"]},{"exact":true,"answer":"\"Too many cats! People are greater than or equal to dogs.\"","question":[">> people, cats, dogs = 20, 30, 15",">> string = \"\"",">> if people < cats",">>  \tstring += \"Too many cats! \"",">> end",">> if people > cats",">> \t\tstring += \"Not many cats! \"",">> end",">> if people < dogs",">> \t\tstring += \"The world is drooled on! \"",">> end",">> dogs += 5",">> if people >= dogs",">>  \tstring += \"People are greater than or equal to dogs.\"",">> end",">> string"]}]},{"chapter":"CHAPTER 8: Arrays and Iterators","questions":[{"exact":false,"answer":"C","question":[">> array = ['Richard', 'Jared', 'Gilfoyle', 'Dinesh']",">> puts array[3] + ' is friends with ' + array[4]","A. Gilfoyle is friends with Dinesh","B. Dinesh is friends with nil","C. Error"]},{"exact":false,"answer":"error","question":[">> array[4] = ['Pied Piper']",">> puts array[0] + ' is the founder of ' + array[4]"]},{"exact":true,"answer":"Richard is the founder of Pied Piper; nil","question":[">> puts array[0] + ' is the founder of ' + array[4][0]"]},{"exact":false,"answer":"4","question":[">> top_public_schools = [['UCB'], ['UCLA'], ['UofV']]",">> ranking = 1",">> top_public_schools.each do |school|",">>\tschool.push ranking",">> \tranking = ranking + 1",">> end",">> ranking"]},{"exact":true,"answer":"UCB is always the ONE AND ONLY number 1 public school; nil","question":[">> puts top_public_schools[0][0] + ' is always the ONE AND ONLY number ' + top_public_schools[0][1].to_s + ' public school'"]},{"exact":false,"answer":"[[3, 4, false], [666]]","question":[">> fido, molly = 3, 4",">> duke = false",">> doggos = [fido, molly, duke]",">> lucifer = 666",">> cats = [lucifer]",">> years = doggos[0] + doggos[1]",">> if years == 7",">>\t if not duke",">>\t\tpets = [doggos, cats]",">>\tend",">> end",">> pets"]},{"exact":true,"answer":"xooooxoo; nil","question":[">> x, o = 'x', 'o'",">> string = \"\"",">> grid = [ [x, o, o, o],",">>\t\t\t[o, x, o, o] ]",">> grid.each do | row |",">>\trow.each do | col |",">>\t\tstring += col",">>\tend",">> end",">> puts string"]},{"exact":true,"answer":"\"CAL\"","question":[">> veggies = [\"Carrots\", \"Alfalfa\", \"Lettuce\", \"Onions\", \"Potatoes\"]",">> secretWord = \"\"",">> veggies.each do |veg|",">>\tif veg.length == 7",">>\t \tsecretWord += veg[0]",">>\tend",">> end",">> secretWord","exact ","\"The struggle is real, Go bears!\"",">> count = 3",">> berkeley = []",">> count.times do",">>  if count < 10",">> \t\tberkeley = []",">> \t\tcount += 1",">> \tend",">> \tberkeley.push \"Go bears!\"",">> end",">> if count < 10",">>  \tberkeley.push \"elggurts ehT\"",">>  \tberkeley.push true",">> end",">> if berkeley.pop",">> \tberkeley.push \"is real\"",">> end",">> cal = [berkeley[1].reverse]",">> cal.push berkeley.pop",">> puts cal.join(\" \") + ', ' + berkeley[0]"]}]}]