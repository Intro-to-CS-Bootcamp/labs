file start

CHAPTER 9: Writing your own methods

!exact
">:("
>> def make_emoticons(a, b)
>> 	if a + b > 0
>> 		return ":)"
>> 	else
>> 		return ">:("
>> 	end
>> end
>> make_emoticons(2, -5)

!exact
35
>> def cube(x)
>> 	return x**3
>> end
>> def sum_cubs(a, b)
>> 	return cube(a) + cube(b)
>> end
>> puts sum_cubs(2,3)

!exact
[2, 4, 6]
>> def even_list(list)
>> 	result = []
>> 	list.each do |num|
>> 		if num % 2 == 0
>> 			result.push num
>> 		end
>> 	end
>> 	return result
>> end

exact
"The Play score is 25 to 20"
>> score = 50
>> def go_bears(score)
>> 	return score / 2
>> end
>> def palo_alto_school_of_trees(score)
>> 	return go_bears(score) - 5
>> end
>> def big_game_1982(score0, score1)
>> 	return "The Play score is " + score0 + " to " + score1
>> end
>> puts big_game_1982((go_bears(score)).to_s, (palo_alto_school_of_trees(score)).to_s)

chapter end

CHAPTER 10: RECURSION

!exact
12
>> def sum_up x
>> 	if x == 0
>> 	    return x
>>  elsif x % 2 == 0
>> 	    return x + sum_up(x / 2)
>> 	else
>> 		return x + sum_up(x / 4)
>> 	end
>> end
>> sum_up 12

!exact
4
(Continue from Q1) 
How many times was the sum_up function called in total?

exact
countdown(n-1) 
Fill in the code on the empty line so that the function accurately counts down (prints) a number n from n to 0. (Tip: You do not need to use "return")
>> def countdown(n)
>>  if n == 0
>>      puts 0
>>  else
>>      puts n
>>      ___________________
>>  end
>> end

exact
return is_odd(x-1); return is_even(x-1)
Mutual recursion is a recursion when two functions are defined in terms of each other. Fill in the blanks so that is_even and is_odd call each other to find out if a number is even or odd. 
>> def is_even x
>>  if x == 0
>>      return true
>>  else
>>      __________________
>>  end
>> end
>> 
>> def is_odd x
>>  if x == 0
>>      return false
>>  else
>>      __________________
>>  end
>> end

!exact
True
>> def has_key(key, number)
>>   is_key = number % 10
>>   if is_key == key
>>     return true
>>   end
>>   return has_key(key, number / 10)
>> end
>> puts has_key(7, 27539)
