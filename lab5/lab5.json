[{"chapter":"CHAPTER 11: Reading and Writing, Saving and Loading, Yin andâ€¦Something Else","questions":[{"exact":true,"answer":"Go bears!; Go bears!; Go bears!","question":["The following code is in a file called goBears10.rb:",">> count = 3",">> while count > 0",">>  puts \"Go bears!\"",">>  count -= 1",">> end","(in Terminal)$ ruby goBears10.rb > testFile.txt","What does the file testFile.txt contain?"]},{"exact":false,"answer":"true; nil","question":[">> filename = \"test_file.txt\"",">> test_string = \"This string is reversed.\"",">> File.open filename, 'w' do |f|",">>  f.write test_string",">> end",">> read_string = File.read filename",">> test_string.reverse",">> files_are_the_same = read_string == test_string",">> puts files_are_the_same"]},{"exact":true,"answer":"This string is reversed.","question":["(Continued from last question) What does test_file.txt contain?"]},{"exact":true,"answer":"I want to graduate but first I need to pass freshman, sophomore, junior, and senior year.; nil","question":["[NOTE: \"print\" has the same behavior as \"puts\" but \"print\" does not start a new line. For instance, >> print \"1\"  >>print \"2\" will display \"12\"]",">> counter = 0",">> limit = 4",">> start = \"I want to graduate but first I need to pass \"",">> schoolYear = [\"freshman\", \"sophomore\", \"junior\", \"senior\"]",">> ending = \".\"",">> print start",">> while counter < limit",">>   print \"#{schoolYear[counter]}, \"",">>   counter += 1",">>   if counter == limit - 1",">>     print \"and #{schoolYear[counter]} year\"",">>     counter += counter",">>   end",">> end",">> puts ending"]}]},{"chapter":"CHAPTER 12: NEW CLASSES OF OBJECTS","questions":[{"exact":false,"answer":"172800","question":[">> Time.gm(2018,6,3) - Time.gm(2018,6,1)"]},{"exact":false,"answer":"true","question":[">> dict = Hash.new",">> dict2 = Hash.new",">> dict == dict2"]},{"exact":false,"answer":"3","question":["(Continued from last question)",">> dict2 = dict",">> dict['a'], dict['b'] = 'Abstract', 'Baroque' ",">> dict2['c'] = 'Cubism'",">> dict.length"]},{"exact":true,"answer":"Transfiguration; Potions; Herbology; Defence Against the Dark Arts & Potions; Too bad we're muggles...; nil","question":[">> prof = {'Mcgonagall' => 'Transfiguration', 'Slughorn' => 'Potions', 'Sprout' => 'Herbology', 'Snape' => 'Defence Against the Dark Arts'}",">> prof['Snape'] = prof['Snape'] + ' & ' + prof['Slughorn']",">> prof.each do |professor, subject|",">>  puts subject",">> end",">> puts \"Too bad we're muggles...\""]},{"exact":true,"answer":"Southside has Poke Bar. Northside has Bongo Burgers. ; What great food!; nil","question":[">> berkeley_foods = {}",">> berkeley_foods[\"Southside\"] = [\"Poke Bar\"]",">> berkeley_foods[\"Northside\"] = [\"Bongo Burgers\"]",">> def places_to_eat location, restaurants",">>   print area = \"#{location} has \"",">>   restaurants.each do |shop|",">>     print \"#{shop}. \"",">>   end",">> end",">> berkeley_foods.each do |location, array_of_restaurants|",">>  places_to_eat location, array_of_restaurants",">> end",">> puts \"What great food!\"","(Tip: watch out, there might be an unexpected space in there!)"]},{"exact":true,"answer":"\"Do!co!ao!\"","question":[">> str, word = 'Fre Shavoca Do!', ''",">> while str.length > 6",">>  word += str[-3 .. -1]",">>  str[-5, 3] = ''",">> end",">> word","(Tip: Don't forget your \"\")"]},{"exact":true,"answer":"Class","question":[">> String.new.class.class"]}]}]
